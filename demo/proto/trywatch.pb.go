// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.11.4
// source: trywatch.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PindaoTryWatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitNum       uint32 `protobuf:"varint,3,opt,name=LimitNum,proto3" json:"LimitNum,omitempty"`             //每日试看次数上限
	SaleImage      string `protobuf:"bytes,4,opt,name=SaleImage,proto3" json:"SaleImage,omitempty"`            //营销图片
	LimitSeconds   uint32 `protobuf:"varint,5,opt,name=LimitSeconds,proto3" json:"LimitSeconds,omitempty"`     // 试看总时长
	SaleImageDelay uint32 `protobuf:"varint,6,opt,name=SaleImageDelay,proto3" json:"SaleImageDelay,omitempty"` //营销图片延迟展示时长
	SaleImageShows uint32 `protobuf:"varint,7,opt,name=SaleImageShows,proto3" json:"SaleImageShows,omitempty"` //营销图片展示时长
}

func (x *PindaoTryWatch) Reset() {
	*x = PindaoTryWatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trywatch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PindaoTryWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PindaoTryWatch) ProtoMessage() {}

func (x *PindaoTryWatch) ProtoReflect() protoreflect.Message {
	mi := &file_trywatch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PindaoTryWatch.ProtoReflect.Descriptor instead.
func (*PindaoTryWatch) Descriptor() ([]byte, []int) {
	return file_trywatch_proto_rawDescGZIP(), []int{0}
}

func (x *PindaoTryWatch) GetLimitNum() uint32 {
	if x != nil {
		return x.LimitNum
	}
	return 0
}

func (x *PindaoTryWatch) GetSaleImage() string {
	if x != nil {
		return x.SaleImage
	}
	return ""
}

func (x *PindaoTryWatch) GetLimitSeconds() uint32 {
	if x != nil {
		return x.LimitSeconds
	}
	return 0
}

func (x *PindaoTryWatch) GetSaleImageDelay() uint32 {
	if x != nil {
		return x.SaleImageDelay
	}
	return 0
}

func (x *PindaoTryWatch) GetSaleImageShows() uint32 {
	if x != nil {
		return x.SaleImageShows
	}
	return 0
}

type SourceTryWatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitActiveNum   uint32 `protobuf:"varint,3,opt,name=LimitActiveNum,proto3" json:"LimitActiveNum,omitempty"`      //每日主动试看次数上限
	LimitPassiveNum  uint32 `protobuf:"varint,4,opt,name=LimitPassiveNum,proto3" json:"LimitPassiveNum,omitempty"`    //每日被动试看次数上限
	SaleImage        string `protobuf:"bytes,5,opt,name=SaleImage,proto3" json:"SaleImage,omitempty"`                 //营销图片
	LimitSeconds     uint32 `protobuf:"varint,6,opt,name=LimitSeconds,proto3" json:"LimitSeconds,omitempty"`          // 试看总时长
	SaleImageDelay   uint32 `protobuf:"varint,7,opt,name=SaleImageDelay,proto3" json:"SaleImageDelay,omitempty"`      //营销图片延迟展示时长
	SaleImageShows   uint32 `protobuf:"varint,8,opt,name=SaleImageShows,proto3" json:"SaleImageShows,omitempty"`      //营销图片展示时长
	BeforeSeconds    uint32 `protobuf:"varint,9,opt,name=BeforeSeconds,proto3" json:"BeforeSeconds,omitempty"`        //进入试看前观看时长
	PreviewCountdown uint32 `protobuf:"varint,10,opt,name=PreviewCountdown,proto3" json:"PreviewCountdown,omitempty"` //预告倒计时
}

func (x *SourceTryWatch) Reset() {
	*x = SourceTryWatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trywatch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceTryWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceTryWatch) ProtoMessage() {}

func (x *SourceTryWatch) ProtoReflect() protoreflect.Message {
	mi := &file_trywatch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceTryWatch.ProtoReflect.Descriptor instead.
func (*SourceTryWatch) Descriptor() ([]byte, []int) {
	return file_trywatch_proto_rawDescGZIP(), []int{1}
}

func (x *SourceTryWatch) GetLimitActiveNum() uint32 {
	if x != nil {
		return x.LimitActiveNum
	}
	return 0
}

func (x *SourceTryWatch) GetLimitPassiveNum() uint32 {
	if x != nil {
		return x.LimitPassiveNum
	}
	return 0
}

func (x *SourceTryWatch) GetSaleImage() string {
	if x != nil {
		return x.SaleImage
	}
	return ""
}

func (x *SourceTryWatch) GetLimitSeconds() uint32 {
	if x != nil {
		return x.LimitSeconds
	}
	return 0
}

func (x *SourceTryWatch) GetSaleImageDelay() uint32 {
	if x != nil {
		return x.SaleImageDelay
	}
	return 0
}

func (x *SourceTryWatch) GetSaleImageShows() uint32 {
	if x != nil {
		return x.SaleImageShows
	}
	return 0
}

func (x *SourceTryWatch) GetBeforeSeconds() uint32 {
	if x != nil {
		return x.BeforeSeconds
	}
	return 0
}

func (x *SourceTryWatch) GetPreviewCountdown() uint32 {
	if x != nil {
		return x.PreviewCountdown
	}
	return 0
}

type SourceTryWatchList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SourceTryWatch `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *SourceTryWatchList) Reset() {
	*x = SourceTryWatchList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trywatch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceTryWatchList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceTryWatchList) ProtoMessage() {}

func (x *SourceTryWatchList) ProtoReflect() protoreflect.Message {
	mi := &file_trywatch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceTryWatchList.ProtoReflect.Descriptor instead.
func (*SourceTryWatchList) Descriptor() ([]byte, []int) {
	return file_trywatch_proto_rawDescGZIP(), []int{2}
}

func (x *SourceTryWatchList) GetList() []*SourceTryWatch {
	if x != nil {
		return x.List
	}
	return nil
}

type TryWatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceList     *SourceTryWatch   `protobuf:"bytes,1,opt,name=SourceList,proto3" json:"SourceList,omitempty"`
	PindaoTryWatch []*PindaoTryWatch `protobuf:"bytes,2,rep,name=PindaoTryWatch,proto3" json:"PindaoTryWatch,omitempty"`
}

func (x *TryWatch) Reset() {
	*x = TryWatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trywatch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TryWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryWatch) ProtoMessage() {}

func (x *TryWatch) ProtoReflect() protoreflect.Message {
	mi := &file_trywatch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryWatch.ProtoReflect.Descriptor instead.
func (*TryWatch) Descriptor() ([]byte, []int) {
	return file_trywatch_proto_rawDescGZIP(), []int{3}
}

func (x *TryWatch) GetSourceList() *SourceTryWatch {
	if x != nil {
		return x.SourceList
	}
	return nil
}

func (x *TryWatch) GetPindaoTryWatch() []*PindaoTryWatch {
	if x != nil {
		return x.PindaoTryWatch
	}
	return nil
}

var File_trywatch_proto protoreflect.FileDescriptor

var file_trywatch_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x72, 0x79, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0xbe, 0x01, 0x0a,
	0x0e, 0x50, 0x69, 0x6e, 0x64, 0x61, 0x6f, 0x54, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x53,
	0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x73, 0x22, 0xc6, 0x02,
	0x0a, 0x0e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x26, 0x0a, 0x0e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x53, 0x61,
	0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0e,
	0x53, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53,
	0x68, 0x6f, 0x77, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x44, 0x0a, 0x12, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x72,
	0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8a, 0x01, 0x0a,
	0x08, 0x54, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x3a, 0x0a, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x50, 0x69, 0x6e, 0x64, 0x61, 0x6f, 0x54,
	0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x64, 0x61,
	0x6f, 0x54, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0e, 0x50, 0x69, 0x6e, 0x64, 0x61,
	0x6f, 0x54, 0x72, 0x79, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x0f, 0x5a, 0x0d, 0x70, 0x62, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_trywatch_proto_rawDescOnce sync.Once
	file_trywatch_proto_rawDescData = file_trywatch_proto_rawDesc
)

func file_trywatch_proto_rawDescGZIP() []byte {
	file_trywatch_proto_rawDescOnce.Do(func() {
		file_trywatch_proto_rawDescData = protoimpl.X.CompressGZIP(file_trywatch_proto_rawDescData)
	})
	return file_trywatch_proto_rawDescData
}

var file_trywatch_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_trywatch_proto_goTypes = []interface{}{
	(*PindaoTryWatch)(nil),     // 0: api.market.PindaoTryWatch
	(*SourceTryWatch)(nil),     // 1: api.market.SourceTryWatch
	(*SourceTryWatchList)(nil), // 2: api.market.SourceTryWatchList
	(*TryWatch)(nil),           // 3: api.market.TryWatch
}
var file_trywatch_proto_depIdxs = []int32{
	1, // 0: api.market.SourceTryWatchList.List:type_name -> api.market.SourceTryWatch
	1, // 1: api.market.TryWatch.SourceList:type_name -> api.market.SourceTryWatch
	0, // 2: api.market.TryWatch.PindaoTryWatch:type_name -> api.market.PindaoTryWatch
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_trywatch_proto_init() }
func file_trywatch_proto_init() {
	if File_trywatch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trywatch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PindaoTryWatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trywatch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceTryWatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trywatch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceTryWatchList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trywatch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TryWatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trywatch_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_trywatch_proto_goTypes,
		DependencyIndexes: file_trywatch_proto_depIdxs,
		MessageInfos:      file_trywatch_proto_msgTypes,
	}.Build()
	File_trywatch_proto = out.File
	file_trywatch_proto_rawDesc = nil
	file_trywatch_proto_goTypes = nil
	file_trywatch_proto_depIdxs = nil
}
